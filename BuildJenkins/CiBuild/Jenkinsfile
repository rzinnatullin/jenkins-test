pipeline {
    agent {
        node {
            label 'skyvera-jenkins-win-build'
            customWorkspace "c:\\jenkins\\ci_buid_${env.BUILD_NUMBER}"
        }
    }
    stages {
        stage('Build') {
            steps {
                script {
                    properties([pipelineTriggers([[$class: 'GitHubPushTrigger']])])
                }
                echo 'Executing build...'
                dir ("${env.WORKSPACE}") {
                    powershell "${env.WORKSPACE}/BuildTeamCity/tl_buildCode.ps1 -CleanBuild -ConfigurationToBuild Debug"
                }
            }
        }
        stage('Unit tests') {
            steps {
                echo 'Run unit tests...'
                dir ("${env.WORKSPACE}") {
                    powershell "${env.WORKSPACE}/BuildJenkins/CiBuild/unittests.ps1" 
                }
            }
        }
    }
    post {
        always {
            echo 'Publishing status to Github...'
            step(
                script {
                    updateGithubCommitStatus(currentBuild);
                }
            );
        }
    }
}

def getRepoURL() {
  bat "git config --get remote.origin.url > .git/remote-url"
  return readFile(".git/remote-url").trim()
}
 
def getCommitSha() {
  bat "git rev-parse HEAD > .git/current-commit"
  return readFile(".git/current-commit").trim()
}
 
def updateGithubCommitStatus(build) {
  // workaround https://issues.jenkins-ci.org/browse/JENKINS-38674
  repoUrl = getRepoURL()
  commitSha = getCommitSha()
 
  step([
    $class: 'GitHubCommitStatusSetter',
    reposSource: [$class: "ManuallyEnteredRepositorySource", url: repoUrl],
    commitShaSource: [$class: "ManuallyEnteredShaSource", sha: commitSha],
    errorHandlers: [[$class: 'ShallowAnyErrorHandler']],
    statusResultSource: [
      $class: 'ConditionalStatusResultSource',
      results: [
        [$class: 'BetterThanOrEqualBuildResult', result: 'SUCCESS', state: 'SUCCESS', message: build.description],
        [$class: 'BetterThanOrEqualBuildResult', result: 'FAILURE', state: 'FAILURE', message: build.description],
        [$class: 'AnyBuildResult', state: 'FAILURE', message: 'Loophole']
      ]
    ]
  ])
}